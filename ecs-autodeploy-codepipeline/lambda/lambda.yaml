Description: "Create Lambda function "

Parameters: 
  networkStackName:
    Description: Name of the base stack with all network resources
    Type: String
    Default: nw

  perm2StackName:
    Description: Name of the base stack with all network resources
    Type: String
    Default: perm2

#
  codebuildStackName:
    Type: String
    Default: codebuild
  
  environment: 
    Type: String 
    Default: dev 
    AllowedValues: 
      - dev
      - prod 

  displayBucketFunctionName: 
    Type: String 
    Default: displayBuckets

  randomNumberGenerator: 
    Type: String 
    Default: rand

  lambdaRoleName: 
    Type: String 
    Default: myLambdaRole

Resources:

  # Lambda function to display all buckets 
  # To invoke from command line: 
  #  aws lambda invoke --function-name displayBuckets $(tty) >/dev/null
  displayBucketsFunction:
    Description: "Create Lambda function"
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${displayBucketFunctionName} 
      Role: 
        Fn::ImportValue: 
          Fn::Sub: "${perm2StackName}-LAMBDA-EXECUTION-ROLE-ARN"
      Runtime: python3.12
      Handler: index.my_handler 
      Code: 
        ZipFile: | 
          import os 
          def my_handler(event, context):
            message = "Buckets : " + os.environ['codepipeline_bucket'] + ", " + os.environ['build_bucket']
            print("Build Bucket = " + os.environ['build_bucket']) 
            print("Code Pipeline Bucket = " + os.environ['codepipeline_bucket']) 
            return message 
      Environment: 
        Variables:
          build_bucket: 
            Fn::ImportValue: 
               Fn::Sub: "${codebuildStackName}-CODEBUILD-BUCKET" 
      Tags:
       - Key: Name
         Value: !Join [" - ", [Fn::Sub: "${AWS::StackName}", "LAMBDA"] ]
       - Key: Environment
         Value: !Sub ${environment}	

  # Lambda function to generate a randome number 
  # To invoke from command line: 
  #  aws lambda invoke --function-name rand $(tty) >/dev/null
  randomNumberFunction:
    Description: "Generate a random number"
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${randomNumberGenerator} 
      Role: 
        Fn::ImportValue: 
           Fn::Sub: "${perm2StackName}-LAMBDA-EXECUTION-ROLE-ARN"
      Runtime: python3.12
      Handler: index.lambda_handler 
      Code: 
        S3Bucket: !Sub '{{resolve:ssm:/${environment}/codebuild/bucket_name}}'
        S3Key: rand2.zip 

      Tags:
       - Key: Name
         Value: !Join [" - ", [Fn::Sub: "${AWS::StackName}", "LAMBDA RANDOM"] ]
       - Key: Environment
         Value: !Sub ${environment}	
  
  # Make the current version as version 1 "v1" 
  randVersion: 
    Type: AWS::Lambda::Version 
    Properties: 
      FunctionName: !Ref randomNumberFunction 
      Description: v1 
      
  # Create an alias to version1 as the env name 
  randAlias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref randomNumberFunction
      FunctionVersion: !GetAtt randVersion.Version
      Name: !Sub ${environment} 

  # 
  #invokeLambda:
  # 
  #  Type: AWS::CloudFormation::CustomResource
  #  Properties:
  #    ServiceToken: !GetAtt displayBucketsFunction.Arn

  #invokeRandom:
  #  Type: AWS::CloudFormation::CustomResource
  #  DependsOn: randomNumberFunction
  #  Properties:
  #    ServiceToken: !GetAtt randomNumberFunction.Arn

Outputs:
  LambdaDisplayBucket:
    Value: !Ref displayBucketsFunction
    Export:
      "Name" :
        Fn::Sub: "${AWS::StackName}-DISPLAY-BUCKET"

